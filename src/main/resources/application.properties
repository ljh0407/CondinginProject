# 1. server port
server.port = 8080

spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/codingin
spring.datasource.username=root
spring.datasource.password=1234

# 3. JPA
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.ddl-auto = create
#spring.jpa.hibernate.ddl-auto = update
#spring.jpa.properties.hibernate.show_sql = true
spring.jpa.properties.hibernate.format_sql = true

# oauth2 kakao
# spring.security.oauth2.client.registration.kakao.client-id = restapi key
# spring.security.oauth2.client.registration.kakao.client-secret = client-secret code ???
# spring.security.oauth2.client.registration.kakao.scope = ????

spring.security.oauth2.client.registration.kakao.client-id =cce319f8700058af3f8827b6b58b7075
spring.security.oauth2.client.registration.kakao.client-secret =pLDYRD7RF8CCf7jXpzsQcAakziMrkyvU
spring.security.oauth2.client.registration.kakao.scope = profile_nickname , account_email

spring.security.oauth2.client.registration.kakao.redirect-uri = {baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.kakao.client-name = kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method = post

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute = kakao_account

# oauth2 naver
spring.security.oauth2.client.registration.naver.client-id =WLDrDIgBWkV5WnhoM3yn
spring.security.oauth2.client.registration.naver.client-secret =E7r79KGkbY
spring.security.oauth2.client.registration.naver.scope = nickname,email

spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-name=naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# oauth2 google
spring.security.oauth2.client.registration.google.client-id =1026444506914-n9ivjdb249qoadll66pkhsqnp3eoqdjp.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret =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
spring.security.oauth2.client.registration.google.scope = email , profile

# oauth2 hithub
spring.security.oauth2.client.registration.github.clientId=936a04f9402ed9c0f093
spring.security.oauth2.client.registration.github.clientSecret=59e036a37ae219a6cb8953ea33445e4fb58c73f3

spring.mvc.pathmatch.matching-strategy = ant_path_matcher

spring.servlet.multipart.maxFileSize=100MB
spring.servlet.multipart.maxRequestSize=100MB